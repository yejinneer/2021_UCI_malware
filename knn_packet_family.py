import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt

def Similarity_binary(packet_sample_1, packet_sample_2):
    similarity_int = 0
    d1 = pd.DataFrame(packet_sample_1)
    df1 = d1.to_string().split()
    d2 = pd.DataFrame(packet_sample_2)
    df2 = d2.to_string().split()

    #Smac
    if df1[14] == df2[14]:
        similarity_int += 1
    #Dmac
    if df1[15] == df2[15]:
        similarity_int += 1
    #Sip
    if df1[16] == df2[16]:
        similarity_int += 1
    #Dip
    if df1[17] == df2[17]:
        similarity_int += 1
    #Sport
    if abs(int(df1[18]) - int(df2[18])) <= 10:
        similarity_int += 1
    #Dport
    if abs(int(df1[19]) - int(df2[19])) <= 10:
        similarity_int += 1
    similarity_int /= 6
    #print("Similarity  = " , similarity_int)
    return similarity_int



# Main logic
packet_family_list = []         # Each cluster
packet_checklist = [0]*80      # Check if packet is in cluster
data = pd.read_csv('malware_http_final_revise.csv', encoding="euc-kr")

# 48 packets in this csv file
for i in range (1,80):
    if(packet_checklist[i] == 0) : # Packet is not in cluster
        tmp_list = []
        for j in range (i+1,80):
            packet_1 = data[data["packetnum"]==i] # i
            packet_2 = data[data["packetnum"]==j] # i+1 
            if Similarity_binary(packet_1, packet_2) > 0.7:
                tmp_list.append(j)
                packet_checklist[j] = 1     # Packet is in cluster
        packet_family_list.append({'Parent':i, 'Child': tmp_list})
        packet_checklist[i] = 1

print(packet_family_list)

